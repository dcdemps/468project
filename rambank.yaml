apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
    spec:
      containers:
        - name: webui
          image: 127.0.0.1:30001/ddemps14/webui
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8081
      
      livenessProbe:
        httpGet:
          path: /health
          port: 8081
        initialDelaySeconds: 30
        periodSeconds: 5
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      component: api
  template:
    metadata:
      labels:
        component: api
    spec:
      containers:
        - name: api
          image: 127.0.0.1:30001/ddemps14/api
          imagePullPolicy: "Always"
          ports:
            - containerPort: 3001
            # - containerPort: 9229
      restartPolicy: Always

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: nginx
#   template:
#     metadata:
#       labels:
#         app: nginx
#     spec:
#       containers:
#         - name: nginx
#           image: 127.0.0.1:30001/ddemps14/nginx
#           ports:
#             - containerPort: 80
#       restartPolicy: Always
#       # volumes:
#       #   - name: nginx
#       #     persistentVolumeClaim:
#       #       claimName: nginx
# status: {}

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: sql-server-db
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: sql-server-db
#   template:
#     metadata:
#       labels:
#         app: sql-server-db
#     spec:
#       containers:
#         - name: sql-server-db
#           image: 127.0.0.1:30001/ddemps14/sql
#           ports:
#             - containerPort: 1433
#           env:
#             - name: ACCEPT_EULA
#               value: "Y"
#             - name: SA_PASSWORD
#               value: password@1
#           resources: {}
#           volumeMounts:
#             - mountPath: /var/opt/mssql/
#               name: data
#       volumes:
#       - name: data
#         hostPath:
#           path: /data
#       restartPolicy: Always
#       # volumes:
#       #   - name: data
#       #     persistentVolumeClaim:
#       #       claimName: data
# status: {}
